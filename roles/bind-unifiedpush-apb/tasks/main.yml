# Store the name of the service instance. It's required for some purposes like adding
# annotations to the mobile client

- name: "Get the name of the service insance"
  shell: oc get serviceinstance --namespace={{ namespace }} -o jsonpath='{.items[?(@.spec.externalID=="{{ _apb_service_instance_id }}")].metadata.name}'
  register: serviceinstance_name

- set_fact:
    UPS_NAME: "{{ serviceinstance_name.stdout }}"

# The check has passed, no variant for this type seems to exist. Continue with
# the binding secrets

- name: "Create ups secret yaml file"
  template:
    src: binding_secret_droid.yml.j2
    dest: /tmp/secret.yaml
  when: CLIENT_TYPE == "Android"

- name: "Create ups secret yaml file"
  template:
    src: binding_secret_ios.yml.j2
    dest: /tmp/secret.yaml
  when: CLIENT_TYPE == "IOS"

- name: "Create binding secret"
  shell: "oc create -f /tmp/secret.yaml -n {{ namespace }}"

- name: "Delete binding Secret Template File"
  file: path=/tmp/secret.yaml state=absent

- name: Store the Android name of the binding secret to be used in unbind
  asb_encode_binding:
    fields:
      namespace: "{{ namespace }}"
      googleKey: "{{ googlekey }}"
      appType: "{{ CLIENT_TYPE }}"
      clientId: "{{ CLIENT_ID }}"
  when: CLIENT_TYPE == "Android"

- name: Store the iOS name of the binding secret to be used in unbind
  asb_encode_binding:
    fields:
      namespace: "{{ namespace }}"
      cert: "{{ cert }}"
      appType: "{{ CLIENT_TYPE }}"
      clientId: "{{ CLIENT_ID }}"
      isProduction: "{{ iosIsProduction }}"
  when: CLIENT_TYPE == "IOS"
